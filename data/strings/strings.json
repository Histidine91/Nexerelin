{
	"general":{
		"alliance":"alliance",
		"alliances":"alliances",
		"alliance(s)":"alliance(s)",
		"base":"base",
		"cabal":"Cabal",
		"close":"close",
		"colony":"colony",
		"colonies":"colonies",
		"conquest":"conquest",
		"continue":"continue",
		"credits":"credits",
		"diplomacy":"diplomacy",
		"diplomatic":"diplomatic",
		"disruption":"disruption",
		"done":"done",
		"expedition":"expedition",
		"theExpedition":"the expedition",
		"faction":"faction",
		"force":"force",
		"theForce":"the force",
		"freePort":"free port",
		"heavyIndustry":"heavy industry",
		"intelReport":"intel report",
		"level":"level",
		"marine":"marine",
		"marines":"marines",
		"options":"options",
		"player":"player",
		"salvage":"salvage",
		"select":"select",
		"size":"size",
		"spoils":"spoils",
		"stability":"stability",
		"stats":"stats",
		"status":"status",
		"target":"target",
		"unknown":"unknown",
		"vote":"vote",
		"you":"you",
		"yourFleet":"your fleet",

		"true":"true",
		"false":"false",
		
		"result":"result",
		"successful":"successful",
		"failed":"failed",
		"over":"over",
		"abort":"abort",
		"pass":"pass",
		"fail":"fail",

		"friendly":"friendly",
		"neutral":"neutral",
		"hostile":"hostile",
		"war":"war",
		"peace":"peace",
		"victory":"victory",
		"defeat":"defeat",
		
		"formed":"formed",
		"dissolved":"dissolved",

		"and":"and",
		"on":"on",
		"at":"at",

		"back":"back",
		"goBack":"go back",
		"dismiss":"dismiss",
		"leave":"leave",

		"yes":"yes",
		"no":"no",
		"abstain":"abstain",
		"confirm":"confirm",
		"proceed":"proceed",
		"cancel":"cancel",
		"avert":"avert",
		"enabled":"enabled",
		"disabled":"disabled",
		"accept":"accept",
		"decline":"decline",
		"reject":"reject",
		"accepted":"accepted",
		"rejected":"rejected",
		"declined":"declined",
		"cancelled":"cancelled",
		"expired":"expired",
		"suspended":"suspended",
		"neverMind":"never mind",

		"randomize":"randomize",

		"previousPage":"previous page",
		"nextPage":"next page",

		"his":"his",
		"her":"her",
		"their":"their",
		
		"is":"is",
		"are":"are",
		"has":"has",
		"have":"have",

		"improvedBy":"improved by $amount",
		"reducedBy":"reduced by $amount",

		"ship":"ship",
		"fleet":"fleet",
		"fleets":"fleets",
		"fighterWing":"fighter wing",
		"fighterWingShort":"wing",
		
		"unknownLocation":"unknown location",
		"anUnknownLocation":"an unknown location",
		
		"outmatched":"outmatched",
		"evenlyMatched":"evenly matched",
		"superior":"superior",
		
		"departure":"departure",
		"arrival":"arrival",
		
		"none":"none",
	},

	"exerelin_abilities":{
		"followMeTitle":"Follow Me!",
		"followMeFloatText":"Follow me!",
		"followMeTooltip1":"Nearby non-busy fleets belonging to your faction or an alliance member will follow you around for $numDays days.",
		"followMeTooltip2":"Only works on patrol, strike and defense fleets, and the fleet must have seen you with your transponder on."
	},

	"exerelin_alliances":{
		"allianceListOption":"Alliance list",
		"theAlliance":"the $alliance",
		
		"alignment":"alignment",
		"alignment_corporate":"corporate",
		"alignment_technocratic":"technocratic",
		"alignment_militarist":"militarist",
		"alignment_diplomatic":"diplomatic",
		"alignment_ideological":"ideological",
		
		"intelDesc":"The $alliance alliance is present in the Sector. It has $numMembers members, with $numMarkets markets of total size $marketSizeSum.",
		"intelMemberEntry":"$faction: $num markets (total size $size)",
		"intelDissolvedDesc":"The $alliance alliance has been dissolved. Its members have gone their separate ways.",
		
		"intelTitle":"$name",
		"intelFormedPoint":"Founded by: $faction1, $faction2",	# not used
		"intelJoinedPoint":"$Faction joined",
		"intelLeftPoint":"$Faction left",
		"intelDissolvedPoint":"Dissolved",
		
		"intelStrengthPoint":"$num members; size $size",
		"intelStrengthPointUpdate":"Now has $num members; size $size",
		"intelStrengthPointShort":"Size $size",
		
		"intelMembersHeader":"Members",
		"intelJoinabilityHeader":"Potential members",
		
		"intelCanJoinList":"Can join",
		"intelTooLowRelationshipList":"Higher relations needed",
		"intelWrongAlignmentList":"Incompatible alignment",
		
		"intelVoteTitle":"Alliance Vote: $alliance",
		"intelVoteBullet":"$warOrPeace with $otherParty: $passOrFail",
		"intelVoteBreakdownHeader":"Voting tally",
		"intelDescPeaceYes":"The alliance $alliance has voted to make peace with $theOtherParty.",
		"intelDescPeaceNo":"The alliance $alliance has voted against making peace with $theOtherParty.",
		"intelDescWarYes":"The alliance $alliance has voted to declare war on $theOtherParty.",
		"intelDescWarNo":"The alliance $alliance has voted against declaring war on $theOtherParty.",
		
		"allianceVote":"Alliance vote",

		"joinsWarAgainst":"$factionOrAlliance1 joins war against $factionOrAlliance2!",
		"makesPeaceWith":"$factionOrAlliance1 makes peace with $factionOrAlliance2",
		"defiesDecisionWar":"$defying defies the decision and refuses to declare war!",
		"defiesDecisionPeace":"$defying defies the decision and continues the war!",
		"defyDecisionWar":"$defying defy the decision and refuses to declare war!",
		"defyDecisionPeace":"$defying defy the decision and continue the war!",

		"numAlliances":"There are $numAlliances alliance(s) in the Sector",
		"joinedAlliance":"Joined alliance $NewAlliance",
		"switchedAlliances":"Left $OldAlliance and joined $NewAlliance",
		"leftAlliance":"Left alliance $OldAlliance",
		"allianceDissolved":"Alliance $OldAlliance has been dissolved",
		"invitedToAlliance":"$TheFaction has joined $NewAlliance",
		"formedAlliance":"Formed $NewAlliance with $theFaction",
		
		"voteIntroLineWar":"Alliance vote: War between $Faction1 and $Faction2",
		"voteIntroLinePeace":"Alliance vote: Peace between $Faction1 and $Faction2",
		"voteNoAllysLine1":"$Faction has no allies",
		"voteNoAllysLine2":"Size rating: $factionSize",
		"voteAllianceHeader":"Alliance $allianceName: size rating $allianceSize",
		"voteQuestionLine":"How does $myFaction vote?",
		"voteConfirm":"Confirm vote?"
	},
	"nex_agents":{
		"agentLevel":"agent level",
		"alertLevel":"alert level",
		"aiAdmin":"AI admin",
		"rebellionStatus":"rebellion by $faction",
		"govtStrength":"government strength",
		"rebelStrength":"rebel strength",

		"agent":"agent",
		"agents":"agents",
		"saboteur":"saboteur",
		"verbSuccess":"success",
		"verbFailed":"failed",
		
		"recruited":"recruited",
		"arrived":"arrived",
		"lost":"lost",
		"dismissed":"dismissed",
		
		"intelTitle":"Agent: $name",
		"intelTitleArrived":"Arrived",
		"intelTitleLevelUp":"Level Up",
		"intelBullet1":"Currently on $market",
		"intelLevelUp":"Now at level %s",
		"intelAborted":"Mission aborted",
		"intelRecovered":"Recovered from injuries",
		"intelDescName":"$name is a level %s agent.",
		"intelDescLost":"Agent $name has been captured or killed.",
		"intelDescDismissed":"Agent $name has been dismissed from your service.",
		"intelDescLocation":"$name is currently $onOrAt $market, a $faction market in the $location.",
		"intelDescLocationHyper":"$name is currently $onOrAt $market, a $faction market in hyperspace.",
		"intelDescXP":"Current XP: %s (%s to next level)",
		"intelDescXPMax":"Current XP: %s",
		"intelDescCurrAction":"Current action",
		"intelDescCurrActionDays":"%s $daysStr remaining",
		"intelDescCurrActionDaysShort":"%s $daysStr",
		"intelDescIdle":"Currently idle.",
		"intelButtonOrders":"New mission",
		"intelDescNextAction":"Queued action",
		"intelButtonOrdersQueue":"Queue mission",
		"intelHeaderLocalReport":"Local report",
		"intelDescLocalReport1":"%s is a size %s market, of stability %s.",
		"intelDescLocalReport2":"Space patrol strength: %s, ground defence strength: %s",
		"intelDescLocalReport3":"Security alert level: %s",
		"intelDescLocalReport4":"Predicted income under player control: $net ($income income, $expenses expenses)",
		"intelHeaderLastMessage":"Last message",
		"intelPromptAbort":"Aborting the mission now will refund %s credits. Proceed?",
		"intelPromptAbortQueued":"Cancelling the queued mission will refund %s credits. Proceed?",
		"intelPromptDismiss":"Really dismiss $agentName from service?",
		
		"barPrompt":"A shady-looking $manOrWoman is sitting in a corner of the bar. $HeOrShe gives you an appraising look.",
		"barOptionStart":"Walk over to the shady person",
		"barDialogIntro1":"You approach the shady figure, who acknowledges you with a nod.",
		"barDialogIntro2":"\"Figured you'd notice me eventually. I don't suppose you know what I do?\"",
		"barDialogExplanation":"\"I'm a $manOrWoman of many tricks, shall we say. I can sniff out a Pather in a crowd at forty paces, or assassinate the governor of a colony, or even take down a core world's spaceport if the odds are right. I think an enterprising starfarer like you will have no problem finding a use for such... talents.\"",
		"barDialogPay":"\"I'll expect a %s credit hiring bonus, and afterwards a starting salary of %s credits per month. Once the initial transfer is complete, I'll be ready for directions within the hour.\"",
		#"barDialogPay":"\"I'll expect a %s credit hiring bonus. Once the initial transfer is complete, I'll be ready for directions within the hour.\"",
		"barOptionMaxAgents":"\"I can't hire any more agents at the moment.\"",
		"barOptionNotEnoughCredits":"\"I can't afford that at the moment.\"",
		"barOptionHire":"Hire",
		"barOptionDecline":"Decline and walk away",
		"barDialogHired":"\"Excellent.\" $HeOrShe slides a data chip across the table before getting up and leaving. \"I'll be in touch.\"",
		"barDialogHiredTip":"You can find your newly hired agent in the Intel screen, using the Agents tag.",
		
		"skillBonusAgents":"maximum agents",
		"tooltipSalary":"Each agent receives a base salary of %s credits per month, plus %s credits per agent level.",
	},
	"nex_agentActions":{
		"unknownFaction":"unknown faction",
		"anUnknownFaction":"an unknown faction",
		
		"baseChance":"base chance for action type",
		
		"costBase":"base cost",
		"costLevelMult":"agent level",
		"costSizeMult":"market size",
		
		"intelButton_goToAgent":"go to agent",
		
		"intelStatus_travel":"Travelling to $market ($status)",
		"intelStatus_travelShort":"Travelling to $market",
		"intelStatus_travel0":"departing",
		"intelStatus_travel1":"in flight",
		"intelStatus_travel2":"insertion underway",
		"intelStatus_travel3":"in place",
		
		"intelStatus_injury":"Recovering from injuries",
		"intelStatus_raiseRelations":"Raising relations with %s",
		"intelStatus_lowerRelations":"Lowering relations with %s",
		"intelStatus_destabilizeMarket":"Destabilizing market",
		"intelStatus_destroyCommodities":"Destroying stockpiles of %s",
		"intelStatus_sabotageIndustry":"Sabotaging %s",
		"intelStatus_infiltrateCell":"Infiltrating Luddic cell",
	
		"intelDesc_raiseRelations_success":"An agent from $theAgentFaction has subverted the $faction political process to improve relations with their own faction.",
		"intelDesc_raiseRelations_successPlayer":"Your agent $agentName has successfully subverted the $faction political process to improve relations with $theThirdFaction.",
		"intelDesc_raiseRelations_failure":"An agent from $theAgentFaction failed to subvert the $faction political process to improve relations with their own faction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_raiseRelations_failurePlayer":"Your agent $agentName failed to subvert the $faction political process to improve relations with $theThirdFaction. Fortunately, their attempts at manipulation went undetected.",
		"intelDesc_raiseRelations_failureDetected":"An agent from $theAgentFaction was discovered attempting to manipulate the $faction political process to improve relations with their own faction. Instead, their meddling has caused the opposite effect.",
		"intelDesc_raiseRelations_failureDetectedPlayer":"Your agent $agentName was discovered attempting to manipulate the $faction political process to improve relations with $theThirdFaction. They are not amused.",
		
		"intelDesc_lowerRelations_success":"An agent from $theAgentFaction has subverted the $faction political process to turn it against $theThirdFaction.",
		"intelDesc_lowerRelations_successPlayer":"Your agent $agentName has subverted the $faction political process to turn it against $theThirdFaction.",
		"intelDesc_lowerRelations_failure":"An agent from $theAgentFaction failed to subvert the $faction political process to turn it against $theThirdFaction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_lowerRelations_failurePlayer":"Your agent $agentName failed to subvert the $faction political process to turn it against $theThirdFaction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_lowerRelations_failureDetected":"An agent from $theAgentFaction was discovered attempting to manipulate the $faction political process to turn it against $theThirdFaction. Ironically, their actions have turned the two would-be enemies against their own faction instead.",
		"intelDesc_lowerRelations_failureDetectedPlayer":"Your agent $agentName was discovered attempting to manipulate the $faction political process to turn it against $theThirdFaction. $TheAgentFaction will not thank you for turning both factions against them.",
		
		"intelDesc_destabilizeMarket_success":"An agent from $theAgentFaction has $actionLine $onOrAt $market. $Faction investigators are appealing to the public to come forward with information on the attack.",
		"intelDesc_destabilizeMarket_successPlayer":"Your agent $agentName has $actionLine $onOrAt $market. $Faction investigators are appealing to the public to come forward with information on the attack.",
		"intelDesc_destabilizeMarket_successDetected":"An agent from $theAgentFaction has $actionLine $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_destabilizeMarket_successDetectedPlayer":"Your agent $agentName has $actionLine $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_destabilizeMarket_failure":"An attempt by a $agentFaction agent to cause chaos $onOrAt $market has been thwarted. $Faction authorities have been unable to identify the party responsible, however.",
		"intelDesc_destabilizeMarket_failurePlayer":"$Faction security has thwarted your agent $agentName's attempts to cause chaos $onOrAt $market. Fortunately, they have been unable to conclusively link you to the crime.",
		"intelDesc_destabilizeMarket_failureDetected":"An $agentFaction operative was captured while attempting to destabilize $market. $Faction intelligence is reported to be planning reprisals.",
		"intelDesc_destabilizeMarket_failureDetectedPlayer":"Your agent $agentName was discovered while attempting to destabilize $market. $Faction intelligence is reported to be planning reprisals.",
		
		"intelDesc_sabotageIndustry_success":"An agent from $theAgentFaction has sabotaged the $industry $onOrAt $market. $Faction investigators have no leads on the crime.",
		"intelDesc_sabotageIndustry_successPlayer":"Your agent $agentName has sabotaged the $industry $onOrAt $market, and made it look like an accident.",
		"intelDesc_sabotageIndustry_successDetected":"An agent from $theAgentFaction has sabotaged the $industry $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_sabotageIndustry_successDetectedPlayer":"Your agent $agentName has sabotaged the $industry $onOrAt $market. $Faction intelligence has traced the attack back to $theAgentFaction.",
		"intelDesc_sabotageIndustry_failure":"An attempt by a $agentFaction agent to sabotage the $industry $onOrAt $market has been thwarted. $Faction authorities have been unable to identify the party responsible, however.",
		"intelDesc_sabotageIndustry_failurePlayer":"$Faction security has thwarted your agent $agentName's attempt to sabotage the $industry $onOrAt $market. Fortunately, $theFaction has not been able to determine who was responsible.",
		"intelDesc_sabotageIndustry_failureDetected":"An agent sent by the $agentFaction to sabotage the $industry $onOrAt $market was seized by authorities. $TheFaction is regarding this as a hostile act.",
		"intelDesc_sabotageIndustry_failureDetectedPlayer":"Your agent $agentName has been caught attempting to sabotage the $industry $onOrAt $market. $TheFaction is expected to respond forcefully.",
		
		"intelDesc_destroyCommodities_success":"A $agentFaction agent has destroyed a stockpile of $commodity $onOrAt $market. $Faction investigators are finding themselves stumped.",
		"intelDesc_destroyCommodities_successPlayer":"Your agent $agentName has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities have their suspicions, but are unable to find any real evidence of $agentFaction involvement.",
		"intelDesc_destroyCommodities_successDetected":"A $agentFaction agent has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities accuse $theAgentFaction of the crime.",
		"intelDesc_destroyCommodities_successDetectedPlayer":"Your agent $agentName has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities have identified $theAgentFaction as responsible for the attack.",
		"intelDesc_destroyCommodities_failure":"Attempts by an agent of $agentFaction to destroy $commodity stocked $onOrAt $market have failed. $Faction authorities have been unable to determine who was responsible, however.",
		"intelDesc_destroyCommodities_failurePlayer":"Your agent $agentName has failed in their attempt to $commodity stocked $onOrAt $market. Fortunately, $theFaction has not traced the crime back to $agentFaction.",
		"intelDesc_destroyCommodities_failureDetected":"An agent of $theAgentFaction was arrested by $faction authorities while attempting to destroy stocks of $commodity $onOrAt $market.",
		"intelDesc_destroyCommodities_failureDetectedPlayer":"$TheFaction counterintelligence has stopped your $agentName in an attempt to destroy $commodity stockpiled $onOrAt $market.",
		
		"intelDesc_infiltrateCell_success":"$AgentFaction intelligence has broken up a $faction cell on $market, a success cheered by the population.",
		"intelDesc_infiltrateCell_successPlayer":"Your agent $agentName has infiltrated and broken up a $faction cell on $market. They won't be a problem any longer, at least for a while.",
		"intelDesc_infiltrateCell_failure":"An $agentFaction agent has failed to penetrate a $faction cell on $market. Terrorist activity continues.",
		"intelDesc_infiltrateCell_failurePlayer":"Your agent $agentName has failed to infiltrate a $faction cell on $market. They're fortunate to be alive — such cells have a short way with traitors.",
		
		"intel_lastMessage_travel_success":"\"Arrived at $market. Awaiting further directions.\"",
		"intel_lastMessage_raiseRelations_success":"\"$TheFaction likes us rather more now.\"",
		"intel_lastMessage_raiseRelations_failure":"\"Political interference with $theFaction was unsuccessful.\"",
		"intel_lastMessage_lowerRelations_success":"\"$TheFaction and $theThirdFaction now have some unresolved disputes. Wonder why...\"",
		"intel_lastMessage_lowerRelations_failure":"\"We failed to drive a wedge between $theFaction and $theThirdFaction.\"",
		"intel_lastMessage_destabilizeMarket_success":"\"Chaos reigns on $market. Almost too easy.\"",
		"intel_lastMessage_destabilizeMarket_failure":"\"We failed to cause panic on $market. Apologies.\"",
		"intel_lastMessage_sabotageIndustry_success":"\"The $industry on $market is now so much scrap for months.\"",
		"intel_lastMessage_sabotageIndustry_failure":"\"I have failed to disrupt the $industry on $market. I am sorry.\"",
		"intel_lastMessage_destroyCommodities_success":"\"Hopefully $theFaction didn't need all those $commodity on $market anyway. Ha.\"",
		"intel_lastMessage_destroyCommodities_failure":"\"We were unable to destroy the $commodity stockpiles on $market.\"",
		"intel_lastMessage_infiltrateCell_success":"\"The $faction cell on $market is no more. Death take them all.\"",
		"intel_lastMessage_infiltrateCell_failure":"\"Infiltration of $faction cell on $market... has failed.\"",
		"intel_lastMessage_injury_success":"\"Recovered from injuries. Ready for duty once more.\"",
		
		"destabilizeText1":"poisoned the water supply",
		"destabilizeText2":"fired into a crowd at a public venue",
		"destabilizeText3":"assassinated a local government official",
		"destabilizeText4":"crashed the stock exchange",
		"destabilizeText5":"bombed a habitation module",
		"destabilizeText6":"released nerve gas into a recreational area",
		"destabilizeText7":"torched a storage depot",
		"destabilizeText8":"poisoned patients at a clinic",
		
		"intelResultHeader":"Results",
		"intelBulletTarget":"Target: %s",
		"intelBulletBaseLoc":"Base in %s",
		
		"intelDesc_agentLost":"Agent $agentName has been captured or killed.",
		"intelDesc_gainedXP":"$agentName gained %s XP.",
		"intelDesc_gainedXPAndLeveledUp":"$agentName gained %s XP and has reached level %s.",
		"intelDesc_injured":"$agentName injured for %s day(s).",
		"intelDesc_agentExfiltrate":"$agentName is escaping to $market.",
		
		"destabilizeEffect":"Stability reduced by %s",
		"industryDisruptEffect":"$industry disrupted for %s days",
		"commodityLossEffect":"Availability of %s reduced by %s.",
		"commodityLossEffectShort":"Availability reduced by %s",
		"commodityDestroyModDesc":"Agent sabotage",
		"cellBaseLocation":"The cell was supported from $baseName, a base in the $location.",

		
		"dialogIntro":"Preparing new mission for agent...",
		"dialogOption_action":"Action type: $action";
		"dialogOption_faction":"Faction: $faction";
		"dialogOption_target":"Target: $target";
		"dialogIndustryPickerHeader":"Select industry to sabotage",
		
		"dialogTooltipAlreadyModifyingRelations":"Another agent is currently already manipulating this faction.",
		#"dialogTooltipModifyingRelationsCooldown":"This faction has already been recently manipulated. It will take $cooldown before further such actions can be executed.",
		"dialogInfoModifyingRelationsCooldown":"This faction has already been manipulated in the recent past. Further such actions will take longer.",
		
		"dialogInfoHeaderTravel":"Travel to %s",
		"dialogInfoHeaderRaiseRelations":"Raise relations with %s",
		"dialogInfoHeaderLowerRelations":"Lower relations between %s and %s",
		"dialogInfoHeaderDestabilizeMarket":"Destabilize %s",
		"dialogInfoHeaderDestroyCommodities":"Destroy %s stockpiles on %s",
		"dialogInfoHeaderSabotageIndustry":"Sabotage %s on %s",
		"dialogInfoSuccessChance":"Success chance: %s",
		"dialogInfoEffect":"Effect: %s – %s",
		"dialogInfoTimeNeeded":"Days to complete: %s",
		"dialogInfoCost":"Cost: %s",
		"dialogConfirmText":"Initiate mission?",
		"dialogFinalText":"Mission orders transmitted.",
		
		"travelTimeStatBase":"Base $departureOrArrival time",
		"travelTimeStatDeciv":"Acquiring transport (decivilized)",
		"travelTimeStatRepLevel":"Bypassing security ($repLevel)",
		"travelTimeStatTravel":"Distance: $dist LY",
	},
	
	"nex_avertDialog":{
		"optionBribe":"Allocate sufficient funds for bribes and other means of disrupting the planning",
		"optionConnections":"Use your connections to disrupt the planning",
		"takeAction":"Take the necessary actions",
		"notEnoughCredits":"Not enough credits.",
		"notEnoughStanding":"Standing not high enough.",
		
		"descStart":"$TheExpeditionName is still in the planning stages, and you have several options at your disposal to ensure it never gets off the ground.",
		
		"descBribe":"Sufficient funding allocated to proper official and unofficial actors should ensure that $theExpeditionName does not go beyond the planning stage.",
		"descBribe2":"A total of %s should be enough to get the job done, and will also ensure that your standing with $theFaction does not suffer.",
		"descBribe3":"You have %s available.",
		
		"descConnections":"You can use your connections to pull a few strings and ensure $theExpeditionName never gets beyond the planning stage.",
		"descConnections2":"Calling in these favors will reduce your standing with $theFaction by %s points.",
		"descConnectionsTooLow":"You do not have sufficient connections with $faction officials to stall out this kind of an operation.",
	},
	
	"nex_baseStrike":{
		"strike":"strike mission",
		"theStrike":"the strike mission",
		"strikeForce":"strike force",
		"theStrikeForce":"the strike force",
		"forceIsOrAre":"is",	# if strikeForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		
		"intelTitle":"$Action: $location",
		"intelDesc":"$TheFaction $isOrAre attacking and destroying $market, a $targetFaction base in the $location. The strike forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelDescUnknown":"$TheFaction $isOrAre attacking and destroying a $targetFaction base in the $location. The strike forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelStageAction":"The strike force is currently in-system.",
		"intelStageActionSuccess":"The strike force has succesfully destroyed $market.",
		"intelStageActionDefeated":"The strike force has been defeated by the defenders of of $market.",
		"intelStageActionAborted":"The strike mission has been aborted.",
	},
	"nex_bombardment":{
		"satBombDesc":"A saturation bombardment will destabilize the colony, reduce its population, and disrupt all operations for a long time.",
		"satBombDescDestroy":"A saturation bombardment of a colony this size will destroy it utterly.",
		"satBombWarning":"An atrocity of this scale cannot be hidden, and will make the following factions hostile:",
		"satBombWarningSmall":"An atrocity of this scale cannot be hidden. $market is sufficiently low-populated and/or remote that the reputational impacts will be limited, but the following factions will nevertheless be angry:",
		"satBombWarningAllHostile":"An atrocity of this scale cannot be hidden, but any factions that would be dismayed by such actions are already hostile to you.",
		"satBombWarningVengeful":"Due to their hatred of $theFaction, the following factions can be expected to overlook your crime:",
		"satBombWarningHidden":"As $market is a hidden and/or transient habitation, its destruction will not attract much, if any, attention from other factions.",
		
		"fuelCost":"The bombardment requires %s fuel. You have %s fuel.",
		
		"unrestReason":"Recently bombarded",
		"unRestReasonWithFaction":"%s bombardment",
		"effectStability":"Stability of $market reduced by %s.",
		"effectMilitaryDisrupt":"Military operations disrupted.",
		"effectMarketDestroyed":"$market destroyed.",
		"effectAllDisrupt":"All operations disrupted.",
		"effectAllDisruptAndDownsize":"All operations disrupted. Colony size reduced to %s.",
	},
	"nex_bounties":{
		"factionBountyIntel_title":"Faction Bounty",
		"factionBountyIntel_titleEnded":"Bounty Ended",
		"factionBountyIntel_desc1":"%s authorities have posted a bounty on all hostile fleets across the Sector.",
		"factionBountyIntel_desc2":"Likely triggered by %s activity.",
		"factionBountyIntel_desc3":"Payment depends on the number and size of ships destroyed. Standing with $theFaction may also improve.",
		"factionBountyIntel_desc4":"$TheFaction $isOrAre currently hostile to:",
		"factionBountyIntel_desc4NoHostile":"$TheFaction $isOrAre not currently hostile to any major factions.",
		"factionBountyIntel_descResult1":"Most recent bounty:",
		"factionBountyIntel_descResult2":"%s received",
		"factionBountyIntel_descResult3":"%s share based on damage dealt",
		"factionBountyIntel_descEnded":"This bounty is no longer on offer.",
	},
	"nex_buyColony":{
		"intelTitle":"Governorship: $market",
	
		"intelDesc":"You have purchased the governorship of $market in the $location from $theFaction.",
		"intelDescLost":"$market in the $location has been conquered by $theOtherFaction. Your governorship has been suspended.",
		"intelDescDestroyed":"$market in the $location has been destroyed, and your governorship with it.",
		"intelDescQuit":"You have resigned the governorship of $market in the $location, held by $theFaction.",
		"intelDescResignedCommission":"You have resigned your commission with $theFaction, and your governorship of $market has been rescinded.",
		"intelDescPotentialRefund":"Current refund value: %s",
		"intelDescRefund":"Refunded %s.",
		"intelDescNoRefund":"Due to your poor relationship with $theFaction, no refund has been issued.",
		
		"dialogCost":"Requires %s credits. You have %s credits.",
		"costFactorIndustry":"industry value",
		"costFactorIncome":"income",
		"costFactorSizeAndStability":"market size and stability",
	},
	
	"nex_colonies":{
		"globalPopulation":"global population",
		"intelGrowthTitle":"Colony Growth",
		"intelGrowthBullet":"Size increased to %s",
		"bonusAdminIntelTitle":"Growth: Admin Unlocked",
		"bonusAdminIntelBullet1":"Faction size: %s",
		"bonusAdminIntelBullet2":"Bonus admins: %s",
		"bonusAdminIntelBullet3":"Next admin at size %s",
		
		"autonomyRevoked":"Autonomy revoked",
		
		"npcGrowthMultDesc":"NPC market",
		"hardModeGrowthMultDesc":"Starfarer mode",
		"hardModeIncomeMultDesc":"Starfarer mode",
		"reportAutonomousTax":"Autonomous colony tax",
		"reportAutonomousTaxTooltip":"Autonomous colonies transfer %s of their profit or loss to your faction.",
	},
	
	"nex_colonyFleet":{
		"colonyFleet":"colony expedition",
		"colonyFleets":"colony expeditions",
		"theColonyFleet":"the colony expedition",
		"forceIsOrAre":"is",	# if colonyFleet is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		"raidName":"expedition",
		"raidNamePossessive":"expedition's",
		
		"intelDesc":"$TheFaction $isOrAre sending an expedition to colonize $market, $aOrAn $planetType in the $location. The flotilla is projected to be $strDesc and is likely comprised of $numFleets $fleetsStr.",
		"intelDescAlreadyHeld":"$market is currently held by $theOtherFaction.",
		"intelBulletArrivedHostile":"Seizing $market by force",
		"intelStageAction":"The colony expedition is currently in-system.",
		"intelOutcomeSuccess":"The expedition has colonized $market.",
		"intelOutcomeSuccessWithRename":"The expedition has colonized $oldName, which they have renamed to $market.",
		"intelOutcomeQueueJumpedEarly":"$market has already been colonized by $theOtherFaction. The expedition has been cancelled and its organizers have sent the queue-jumpers a note of protest.",
		"intelOutcomeQueueJumped":"$market has already been colonized by $theOtherFaction. The would-be settlers are returning to their homes in great sorrow.",
		#"intelOutcomeQueueFriendly":"$market has already been colonized by $theOtherFaction. The settlers have been absorbed into the new polity."
		"intelOutcomeInvadeFailed":"$market has already been colonized by $theOtherFaction. The $faction settlers' attempt to seize their \"rightful\" land has been repulsed with great loss of life.",
		"intelOutcomeInvadeSuccess":"$market had already been colonized by $theOtherFaction. The $faction settlers have taken over by force.",
	},
	
	"nex_conquestMission":{
		"intelTitle":"Conquest Mission",
		"intelBulletReward":"Current base reward: %s",
		"intelBulletReward_received":"%s received",
		"intelBulletTarget":"Held by $targetFaction",
		"intelDesc1":"$TheFaction desires that another faction conquer $market in the $location, currently held by $theOtherFaction, and transfer it to their control.",
		"intelDesc1Alt":"$TheFaction desires that another faction conquer $market in the $location, previously held by $theOtherFaction, and transfer it to their control.",
		"intelDesc2":"Successful completion will result in a size-based reputation gain (in addition to that from a normal transfer). The credit reward is equal to the shutdown value of the structures and industries $onOrAt $market, plus its three-month income, plus a bonus based on its size and stability.",
		"intelDescDuration_pre":"You have ",
		"intelDescDuration_post":"to complete the mission.",
		"intelDescDuration_post_short":"to complete",
		"intelDesc3":"After taking control of $market, talk to local officials to perform the transfer.",
		
		"intelDescOutcome_alreadyTaken":"$TheFaction has conquered $market using their own resources. The mission is over.",
		"intelDescOutcome_noLongerHostile":"$market's current faction is not currently hostile. The mission has been withdrawn.",
		"intelDescOutcome_noLongerExists":"The mission has been withdrawn as $market has been destroyed.",
	},
	
	"nex_credits":{
		"contribution_zaphide":"The original Exerelin",
		"contribution_histidine":"Update for Starsector 0.65 and later",
		"contribution_darkRevenant":"Much coding help; compatibility with SS+ and descendant mods",
		"contribution_lazyWizard":"Version Checker, Console Commands, other code",
		"contribution_soren":"Player flags",
		"contribution_tartiflette":"Prism Freeport",
		"contribution_weezer":"Captured market descriptions",
		"contribution_ssModCommunity":"Various tips, pointers and feedback",
		"contribution_fractalSoftworks":"The Fractal Softworks team that made Starsector"
	},
	
	"nex_decivEvent":{
		"costPanelHeader":"Trading $commodity1 for $commodity2: amount (available)",
		"costPanelHeaderBomb":"Bombing reward: $commodity",
		"fuelAmount":"You have %s fuel.",
		"freeSpace":"Your fleet's holds can accommodate an additional %s units of cargo.",
		"freeSpaceFuel":"Your fleet's fuel tanks can hold an additional %s units of fuel.",
		"freeSpaceCrew":"Your fleet's crew quarters can accommodate an additional %s personnel.",
	},
	
	"nex_defenseFleet":{
		"defense":"defense",
		"theDefense":"the defense",
		"defenseForce":"defense force",
		"theDefenseForce":"the defense force",
		"forceIsOrAre":"is",
		"forceHasOrHave":"has",
		
		"intelDesc":"$TheFaction $isOrAre dispatching a task force to defend $market in the $location, held by $theTargetFaction. The defense forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelStageAction":"The defense forces are currently in-system.",
		"intelOutcomeSuccess":"The defense forces have completed their mission.",
	},
	
	"nex_disruptMission":{
		"intelTitle":"Disruption Mission: $industry",
		"intelBulletReward":"Reward: %s",
		"intelBulletReward_received":"%s received",
		
		"intelDesc1":"$TheFaction desires that a third party disrupt the $industry $onOrAt $market, a size $size market held by $theOtherFaction in the $location.",
		"intelDescReason":"The primary reason for the bounty is",
		"intelDescReasonMilitary":"the hostilities between $theFaction and $theOtherFaction.",
		"intelDescReasonEconomic":"the competition posed to $theFaction in the market for $commodity.",
		"intelDescReasonFreePort":"$market's \"free port\" status, and the concomitant export of illegal goods alongside it being a haven for various undesirables.",
		"intelDesc3":"The $industry must be disrupted for at least $disruptionTime days to complete the mission.",
		
		"intelDescDuration_pre":"You have ",
		"intelDescDuration_post":"to complete the mission.",
		"intelDescDuration_post_short":"to complete",
		
		"intelDescOutcome_industryRemoved":"The target industry no longer exists $onOrAt $market.",
		"intelDescOutcome_noLongerHostile":"$market's current faction is not currently hostile. The mission has been withdrawn.",
		"intelDescOutcome_noLongerExists":"The mission has been withdrawn as $market has been destroyed.",
		"intelDescOutcome_alreadyDisrupted":"The industry has already been disrupted.",
	},
	
	"exerelin_diplomacy":{	
		"intelTitle":"Diplomacy",
		"intelHeader1":"News summary",
		"intelHeader2":"Effects",
		"intelRepResultPositive":"Relations between $faction1 and $faction2 improved by $deltaAbs, to $newRelationStr.",
		"intelRepResultPositivePlayer":"Relations with $faction improved by $deltaAbs, to $newRelationStr.",
		"intelRepResultNegative":"Relations between $faction1 and $faction2 reduced by $deltaAbs, to $newRelationStr.",
		"intelRepResultNegativePlayer":"Relations with $faction reduced by $deltaAbs, to $newRelationStr.",
		"intelRepCurrent":"Current relations: $relationStr",
		"intelRepCurrentShort":"Now at $relationStr",
	
		"player_peace_msg":"You are no longer hostile to $factionOrAlliance",
		"player_war_msg":"You are now hostile to $factionOrAlliance",

		"repChangeMsg":"Relationship with $theFaction $changedBy, currently at $currentRep",
		"repChangeMsgOther":"$OtherFaction: relationship with $theFaction $changedBy, currently at $currentRep",
		
		"intelCeasefireTitle":"Ceasefire Offer",
		"intelPeaceTreatyTitle":"Peace Treaty Offer",
		"intelCeasefireDesc":"$TheFaction $isOrAre offering a $ceasefireOrPeaceTreaty to end the ongoing hostilities. In the absence of further overt hostile actions, this will run for at least $days days and until further diplomatic events occur.",
		"intelCeasefireDescTime":"You have $timeLeft $days to accept or reject the offer.",
		"intelCeasefireDescResult":"You have $acceptedOrRejected the offer.",
		"intelCeasefireConfirm":"Confirm?",
	},
	"nex_diplomacyProfile":{
		"title":"Diplomacy Profile",
		"alignments":"alignments",
		"warWeariness":"war weariness",
		
		"claimedMarkets":"$TheFaction has revanchist claims on the following markets: ",
		"claimedMarketsEntry":"$market (size $size)",
		"claimedMarketsNone":"$TheFaction does not have revanchist claims on any markets.",
		
		"disposition":"Disposition towards $playerFaction: $disp",
		"dispositionGood":"$TheFaction $isOrAre favourably inclined towards us and will try to cultivate a positive relationship with us.",
		"dispositionNeutral":"$TheFaction $isOrAre uncertain where they stand with regard to us, and may take positive or negative actions.",
		"dispositionBad":"$TheFaction $isOrAre unfriendly towards us and will look to pick a fight.",
		"dispositionWarRisk":"At current relations and disposition, $theFaction may declare war on us if the opportunity arises.",
		
		"morality":"morality",
		"morality_good":"good",
		"morality_neutral":"neutral",
		"morality_amoral":"amoral",
		"morality_evil":"evil",
		
		"dispTableHeader":"Dispositions towards other factions",
		"dispTableOverall":"Overall",
		"dispTableBase":"Base",
		"dispTableRelationship":"Relation",
		"dispTableAlignments":"Alignments",
		"dispTableMorality":"Morality",
		"dispTableCommonEnemies":"Common foes",
		"dispTableRevanchism":"Revanchism",
		"dispTableDominance":"Dominance",
		"dispTableRecentEvents":"Recent evnts",
		"dispTableHardMode":"Difficulty",
		"dispTableTraits":"Traits",
		
		"dispFootnoteHardMode":"Starfarer mode: $penalty disposition towards $faction",
		
		"traitsHeader":"Traits",
		
		"wearinessTooHighForWar":"$TheFaction has too much war weariness to deliberately seek out any new wars at present.",
		"wearinessEnoughForPeace":"$TheFaction may be amenable to negotiating peace with another faction.",
		
		"intelTag":"Dipl. profiles",
	},
	
	"exerelin_events":{
		"agentDestabilizeMarket":"Agent terror attacks on $market",
		"allianceChanged":"Alliance changed: $alliance",
		"allianceFormed":"Alliance formed: $alliance",
		"allianceDissolved":"Alliance dissolved: $alliance",
		"allianceVote":"Alliance vote",
		"covertOps":"$agentFaction covert action against $targetFaction",
		"diplomacy":"$faction – $otherFaction diplomatic event",
		"factionChanged":"Faction changed",
		"factionEliminated":"$faction driven from Sector",
		"factionRespawned":"$faction arrives in Sector",
		"factionSalary":"Faction salary payment",
		"followersTax":"Tax collection",
		"insurance":"Ship loss insurance",
		"invasionFleet":"$faction invasion fleet update",
		"rebellion":"Rebellion on $market",
		"revengeanceFleetEvent":"Revenge Fleet",
		"securityAlert":"Security alert on $market",
		"slaveTrade":"Slave trade on $market",
		"superweapon":"Superweapon used on $market!",
		"victory":"$faction victory",
		"warmonger":"Warmonger reputation penalty",
		
	},
	"exerelin_factions":{
		"factionDirectoryOption":"Faction directory",

		"joinedFaction":"Joined $theNewFaction",
		"leftFaction":"Left $theOldFaction",
		"numMarkets":"$TheFaction have $numMarkets market(s)",
		"switchedFactions":"Left $theOldFaction for $theNewFaction",

		"relationshipLimit":"Relationship between $faction1 and $faction2 limited to $relationship",
		"repLimit":"Reputation with $faction capped at %s, currently %s",
		
		"intel_titleEliminated":"Faction Eliminated",
		"intel_titleSpawned":"Faction Arrives",
		"intel_titleRespawned":"Faction Respawns",
		
		"intel_descEliminated":"$TheFaction $hasOrHave lost their last stronghold of $market, and their surviving fleets are taking refuge elsewhere. Their ambitions in the Sector are clearly over.",
		"intel_descSpawned":"$TheFaction $isOrAre moving into the Sector, with a foothold in $market.",
		"intel_descRespawned":"$TheFaction $hasOrHave regained a foothold in the Sector, at $market.",
		
		"intel_descWon":"With the defeat of $theFaction, your $playerFaction reigns supreme over the Sector. Congratulations!",
		"intel_descLost":"With your faction beaten and scattered, you are on your own with whatever allies you still have or can cobble up. It may be time to find greener pastures elsewhere.",
	},
	"exerelin_fleets":{
		"invasionFleetName":"Invasion Fleet",
		"invasionFleetPrefixSmall":"Small",
		"invasionFleetPrefixLarge":"Grand",

		"invasionSupportFleetName":"Strike Fleet",
		"invasionSupportFleetPrefixSmall":"Small",
		"invasionSupportFleetPrefixLarge":"Large",

		"responseFleetName":"Response Fleet",
		"responseFleetPrefixSmall":"Small",
		"responseFleetPrefixLarge":"Prime",

		"defenceFleetName":"Defense Fleet",
		"defenceFleetPrefixSmall":"Small",
		"defenceFleetPrefixLarge":"Large",

		"miningFleetName":"Mining Fleet",
		"miningFleetPrefixSmall":"Small",
		"miningFleetPrefixLarge":"Large",

		"suppressionFleetName":"Suppression Fleet",
		"suppressionFleetPrefixSmall":"Small",
		"suppressionFleetPrefixLarge":"Large",

		"stationName":"Defense Station",

		"fleetRelationship":"$faction $isOrAre $relationship.",

		"supportingYourForces":"supporting your forces",
		"joiningTheEnemy":"joining the enemy",
		"supportingOpposingSide":"supporting the opposing side"
	},
	"nex_fleetIntel":{
		"title":"$Action: $market",
		"desc":"$TheFaction $isOrAre $actioning $market in the $location, held by $theTargetFaction. The $forceType $isOrAre projected to be $strDesc and $isOrAre likely comprised of $numFleets $fleetsStr.",
		"bulletTarget":"Held by $targetFaction",
		"bulletArrived":"$ForceType arrived in system",
		"bulletSuccess":"$Action successful",
		"bulletFailed":"$Action failed",
		"bulletNoLongerExists":"$Action aborted: target destroyed",
		"bulletNoLongerHostile":"$Action aborted: no longer hostile",
		"bulletCancelled":"$Action cancelled",
		"bulletETA":"Estimated %s $days until arrival",
		"strCompare":"Compared to the defenses, $theAction's space forces are %s and its ground forces are %s.",
		"predictionDefeatInOrbit":"$TheAction is likely to be defeated in orbit.",
		"predictionDefeatOnGround":"$TheAction is likely to be largely repelled by the ground defences.",
		"predictionUncertain":"$TheAction's outcome is uncertain.",
		"predictionSuccessful":"$TheAction is likely to be successful.",
		"predictionBombard":"$theForceType is likely to resort to tactical bombardment.",
		"outcomeNoLongerHostile":"As $target's current faction is not currently hostile, $theAction has been cancelled.",
		"outcomeNoLongerExists":"$target has been destroyed by another hostile party.",
		
		"stageOrganize":"$TheAction is currently being planned $onOrAt $market.",
		"stageOrganizeUnknown":"$TheAction is currently in the planning stages.",
		"stageOrganizeDisrupted":"$TheAction has been disrupted in the planning stages and will not happen.",
		"stageOrganizeTiming":"$TheForceType should begin assembling in %s $strDays.",
		"stageOrganizeTimingSoon":"$TheForceType should begin assembling shortly.",
		"stageAssemble":"$TheForceType $isOrAre currently assembling in the $location.",
		"stageAssembleUnknown":"$TheForceType $isOrAre currently assembling at an unknown location.",
		"stageAssembleFail":"$TheForceType $hasOrHave failed to successfully assemble at the rendezvous point.",
		"stageTravel":"$TheForceType $isOrAre currently travelling to the $location.",
		"stageTravelFailed":"$TheForceType $hasOrHave failed to successfully reach the $location.",
		"stageAction":"$TheForceType $isOrAre currently in-system.",
		"stageActionSuccess":"$TheForceType $hasOrHave conquered $market.",
		"stageActionDefeatedGround":"$TheForceType $hasOrHave been repelled by the ground defenses of $market.",
		"stageActionDefeatedSpace":"$TheForceType $hasOrHave been defeated by the defenders of of $market.",
		"stageActionAborted":"$TheAction $hasOrHave been aborted.",
	},
	"exerelin_fleetAssignments":{
		"preparingFor":"preparing for $missionType at $target",
		"preparingForShort":"preparing for $missionType",
		"returningTo":"returning to $target",
		"standingDown":"standing down from $missionType",
		"endingMission":"ending mission at $target",
		"travellingTo":"travelling to $target",
		"travellingToStarSystem":"travelling to the $target star system",
		"scramblingFrom":"scrambling from $target",
		"orbiting":"orbiting $target",
		"rendezvous":"waiting at rendezvous point",
		
		"assisting":"assisting $target",
		"attacking":"attacking $target",
		"attackingStarSystem":"attacking the $target star system",
		"attackingAroundStarSystem":"attacking around the $target star system",
		"movingInToAttack":"moving in to attack $target",
		"bombarding":"bombarding $target",
		"movingInToBombard":"moving in to bombard $target",
		"colonizing":"colonizing $target",
		"movingInToColonize":"moving in to colonize $target",
		"onColonyExpedition":"on colony expedition",
		"defending":"defending $target",
		"movingToDefend":"moving to defend $target",
		"deliveringRelief":"delivering relief package to $target",
		"unloadingRelief":"unloading relief package at $target",
		"patrolling":"patrolling $target",
		"patrollingStarSystem":"patrolling the $target star system",
		"patrollingAroundStarSystem":"patrolling around the $target star system",
		"patrollingNoTarget":"patrolling",
		"intercepting":"intercepting $target",
		"trailing":"trailing $target",
		"hunting":"hunting $target",
		"beginningInvasion":"beginning invasion of $target",
		"invading":"invading $target",
		"movingInToInvade":"moving in to invade $target",
		"mining":"mining $target",
		"miningUnload":"unloading cargo and disbanding",
		"suppressingRebellion":"suppressing rebellion at $target",
		"wandering":"wandering $target",
		"operatingIn":"operating in $target",

		"missionStrike":"strike mission",
		"missionInvasion":"invasion",
		"missionMining":"mining expedition",
		"missionPatrol":"patrol",
		"missionSuppression":"rebel suppression",
		"missionColony":"colony expedition"
	},
	"nex_fleetRequest":{
		"fleetRequest":"fleet request",
		
		"optionFleetType":"Mission",
		"optionStrength":"Task force strength",
		"optionSource":"Origin market",
		"optionFaction":"Target faction",
		"optionTarget":"Target market",
		
		"fleetType_invasion":"invasion",
		"fleetType_basestrike":"base strike",
		"fleetType_raid":"raid",
		"fleetType_defense":"defense",
		
		"fleetCost":"fleet cost",
		"fleetCostHelp":"The fleet(s) will cost $credits credits per FP.",
		"fleetCostHelpMarines":"For invasion fleets, adding marines will multiply the cost, up to $marineMult times the base cost.",
		"fleetPoints":"fleet points",
		"marinesPerFleet":"marines per fleet",
		"infoDistance":"Distance: $dist LY",
		"timeToLaunch":"time to launch",
		"infoTargetStrength":"Estimated strength: $space",
		"infoTargetStrengthGround":"Estimated strength: $space space, $ground ground",
		
		"targetEntryTooltip":"Space defences: $space",
		"targetEntryGroundTooltip":"Space defences: $space\nGround defences: $ground",
		
		"fleetSpawnMessage":"The task force is being prepared for launch.",
		"tooltipInsufficientFunds":"Dispatching this task force requires $cost credits. You only have $credits credits.",
		"proceedConfirm":"Confirm launch?",
		"proceedConfirmNonHostile":"$TheFaction is not currently hostile, but will be if you launch this task force. Are you sure you wish to do this?",
	},
	"exerelin_invasion":{
		"invadeOpt":"Invade $market",
		"nonHostileWarning":"$TheFaction $isOrAre not currently hostile. An invasion is a major enough hostile action that it can't be concealed, regardless of transponder status.",
		"takeForSelfWarning":"You can take $market as a personal holding, but this will not please your current faction.\n\nProceed?",
		"takeForSelfNoWarning":"As $market originally belonged to you (or is otherwise unclaimed), you may take it for yourself without penalty.",
		"repChangeCooldownMsg":"No reputation gain as this market has already been captured recently",
		
		"invasion":"invasion",
		"invasions":"invasions",
		"theInvasion":"the invasion",
		"invasionForce":"invasion force",
		"theInvasionForce":"the invasion force",
		"forceIsOrAre":"is",	# if invasionForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		
		"respawnInvasion":"resurgence",
		"theRespawnInvasion":"the resurgence",
		"respawnInvasionForce":"resurgence force",
		"theRespawnInvasionForce":"the resurgence force",
		
		"invadeBlocked":"Any orbital station and interfering fleets must be removed before an invasion is possible.",
		
		"intelDesc":"$TheFaction $isOrAre invading $market in the $location, held by $theTargetFaction. The invasion forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelDescRespawn":"Remnants of the $theFaction have gathered to invade $market in the $location, held by $theTargetFaction, in a bid to revive their power. The invasion forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelPredictionBombard":"The invasion force is likely to resort to tactical bombardment.",
		"intelBrawl":"$TheTargetFaction will likely deploy a large defense force to meet the invasion.",
		
		"intelStageAction":"The invasion force is currently in-system.",
		"intelStageWait":"The invasion force is defending $market after capturing it.",
		"intelStageActionSuccess":"The invasion force has conquered $market.",
		"intelStageActionInsufficientReached":"The invasion forces have failed to reach $location in adequate strength. The invasion is aborted.",
		"intelStageActionDefeatedGround":"The invasion forces have been repelled by the ground defenses of $market.",
		"intelStageActionDefeatedSpace":"The invasion force has been defeated by the defenders of $market.",
		"intelStageActionAborted":"The invasion has been aborted.",
		
		"invasionStrength":"invasion strength",
		"groundDefStrength":"ground defense strength",
		"marinesOnBoard":"marines on board",
		"groundSupportCapability":"fleet capability for ground support",
		"heavyWeaponsOnBoard":"heavy armaments in cargo",
		"defenseBonus":"$Faction defense bonus",
		"defenseBonusGeneral":"Natural invasion resistance",
		"defenderPreparedness":"increased defender preparedness",
		"attackBonus":"$Faction attack bonus",
		"defendBonus":"$Faction defense bonus",
		"forceBalance":"force balance",
		"recentlyInvaded":"recently invaded",
		
		"insufficientForces":"You do not have the forces to carry out an effective invasion.",
		"insufficientForcesTooltip":"Requires at least $percent force balance.",
		
		"invasionProceed":"Proceed with invasion",
		"invasionContinue":"Continue the offensive",
		"invasionAbort":"Abort invasion",
		"invasionFail":"Withdraw from $market",
		"invasionSpoils":"Pick through the spoils",
		"invasionTakeForSelf":"Take $market for yourself",
		
		"attackerStrength":"attacker strength",
		"defenderStrength":"defender strength",
		"marinesRemaining":"marines remaining",
		"mechsRemaining":"heavy armaments remaining",
		
		"attackerStrengthRemaining":"Remaining attacker strength: $str ($delta)",
		"defenderStrengthRemaining":"Remaining defender strength: $str ($delta)",
		
		"industryDisruption":"$industry disrupted for $days days",
		
		"roundResult_win":"Your forces overwhelm the enemy, seizing control of $market. Surviving defenders are surrendering.",
		"roundResult_good":"Your forces make excellent progress, pushing back the enemy rapidly.",
		"roundResult_ok":"Your forces slowly but surely gain ground against the enemy, driving them back.",
		"roundResult_bad":"Your forces encounter fierce resistance from the defenders of $market and make little headway.",
		"roundResult_lose":"The defenders counterattack and eliminate your ground forces.",
		
		"noLosses":"Your forces have not suffered any losses.",
		"stabilityReduced":"Stability of $market reduced by %s.",
		
		"endMsgLoot":"The invasion forces captured a quantity of various items, as well as some credits.",
		"endMsgNoLoot":"The invasion did not lead to the capture of a meaningful quantity of goods.",
		"endMsgDefeat":"Your invasion has been defeated.",
	},
	"exerelin_landmarks":{
		"abandonedStation":"Abandoned Station",
		"beholderStation":"Beholder Station",
		"memorialBeacon":"Memorial Beacon",
		"museumShip":"Museum Ship ($name)",
	},

	"exerelin_markets":{
		"marketDirectoryEntry":"$market, $location (size $size)",
		"marketDirectoryEntryNoLocation":"$market (size $size)",
		"marketDirectoryEntryForTrade":"$market, $location ($faction, $distance LY)",
		"marketDirectoryEntryDistOnly":"$market  ($distance LY)",
		"marketDirectoryHidden":"$num hidden markets",
		"hasBaseTip":"has military base",
		
		"intelCaptureTitle":"Market Captured - $market",
		"intelTransferTitle":"Market Transfered - $market",
		"intelTransferBullet1":"Now under $faction",
		"intelTransferBullet2":"Previously $faction",
		"intelCaptureBulletCredits":"Lost %s",
		
		"intelCaptureDesc":"$NewFaction $hasOrHave captured $market (size $size) in the $location from $oldFaction.",
		"intelCapturePlayerDesc":"$NewFaction $hasOrHave captured $market (size $size) in the $location from the $oldFaction, under the command of $player.",
		"intelTransferDesc":"$oldFaction has transfered $market (size $size) in the $location to $newFaction.",
		"intelCaptureDescCredits":"You have lost %s credits due to looting by the invaders.",
		"intelTransferFactionSizeHeader":"Current status",
		"intelTransferFactionSizeEntry":"$faction: $num markets (total size $size)",
		
		"intelTag":"Captures",

		"transferMarketWarning":"Are you sure you wish to transfer $market to $theFaction?",
		"transferMarketRep":"Transferring $market will earn $repChange reputation with the recipient faction.",
		"transferMarketOriginalOwner":"$market was originally held by $theFaction, and will give $bonus the reputation if returned to them.",
		"transferMarketRecentlyCaptured":"$market was recently taken from $theFaction, and will only give $mult the reputation if returned now.",
		"transferMarketFactorIndustry":"industry value",
		"transferMarketFactorIncome":"income",
		"transferMarketFactorStability":"stability",
		"transferMarketFactorSize":"market size",
		
		"stabilizeHeader":"Stabilizing $market will earn $reputation reputation with $theFaction, cost $credits and require the following commodities:",
		"stabilizeTooltipDisabled":"Insufficient resources.",
		"stabilizeRecentUnrestEntry":"Stabilization package",
		"stabilizeEffect":"Stability of $market increased by %s.",
		
		"reinforcedDefensesHeader":"You can reinforce the ground defenses of $market for $time days at a cost of $credits and the following commodities:",
		"reinforcedDefensesTooltipDisabled":"Insufficient resources.",
		"reinforcedDefensesModDesc":"Reinforced defenses",
		"reinforcedDefensesTooltip":"%s× defense bonus. %s day(s) remaining.",
		
		"remoteCommDirectory":"Remote connection to comm directory",

		"prismNoSale":"No sales/returns",
		"prismRelTooLow":"Requires: $faction - $minRelationship",
		"prismShipQualityMod":"High-End Seller",
		"prismShipQualityModLowStability":" - low stability",

		"templarControl":"Templar control"
	},
	"exerelin_marketConditions":{
		"marketAttacked":"Market attacked",
		"agentDestabilization":"Agent destabilization",
		"rebellion":"Rebellion",
	},

	"exerelin_mining":{
		"danger":"mining danger",
		"exhaustion":"resource exhaustion",
		"miningAccident":"mining accident",
		"miningReport":"mining report",
		"miningStrength":"mining strength",
		"planetType":"type",
		"resourcesExtracted":"resources extracted",
		"theAsteroid":"the asteroid",
		"LPC":"$fighterName LPC",
		"hullmod":"$hullmod – modspec",
		"machineryAvailable":"Machinery usable (available)",

		"miningToolsListHeader":"The following mining ships and weapons exist in the Sector:",
		"miningToolsListAddendum":"Fighter wings and modules with the appropriate weapons count towards their parent ship's mining strength. Built-in weapons are also counted.",
		"insufficientMachineryWarning":"Your $shipOrFleet does not have enough heavy machinery to work at full capacity.",

		"cacheFound":"Hidden cache found!",
		"accidentsOccured":"Accidents occured!",
		"shipDamaged":"$ship took $damage damage",
		"shipDestroyed":"$ship destroyed",
		"shipLostCR":"$ship lost $crLost CR",
		"crewLost":"crew lost",
		"machineryLost":"heavy machinery lost"
	},
	
	"exerelin_ngc":{
		"factions":"factions",
		"mainFactions":"main factions",
		"randomFaction":"random faction",
		"ownFaction":"own faction",
		"freeStart":"free start",
		"freeStartHard":"free start (hard)",
		"joinedFaction":"joined $faction",
		"ownFactionDisabledTooltip":"No planet to spawn from in non-random sector, use free start instead",
		"freeStartTooltip":"Own faction, but with no starting planet; you're on your own.",
		
		"playerFleet":"player fleet",
		
		"devStart":">> (dev) quick start",
		"devStartFast":">> (dev) quick start no time pass",
		
		"customScenario":"custom scenario",
		"customScenarioRemoved":"Custom scenario $name is incompatible with non-random sector and has been disabled",
		
		"customStart":"custom start",
		"customStartTooltipFaction":"Starting faction",
		"customStartTooltipDifficulty":"Difficulty",
		
		"customStartOrScenario_tooltipDisabledInRandom":"Disabled in random sector mode",
		"customStartOrScenario_tooltipDisabledInNonRandom":"Disabled in non-random sector mode",
		
		"dModLevel0":"none",
		"dModLevel1":"mild",
		"dModLevel2":"moderate",
		"dModLevel3":"severe",

		"added":"added",
		#"shipString":"$shipClass-class $designation ($variantName)",
		"shipString":"$shipClass-class $designation",
		"fighterWingString":"$shipClass wing",
		"gainedXP":"gained $xp XP",
		"recruitedOfficer":"recruited $numOfficers officer",
		"recruitedOfficers":"recruited $numOfficers officers",

		"populatedSystemsTitle":"Populated systems",
		"populatedSystemsTooltip":"This is a target number of systems. Actual populated system count may be more or less than this.",
		"populatedPlanetsTitle":"Populated planets",
		"populatedPlanetsTooltip":"Will fill new systems if specified number of populated systems is insufficient.",
		"stationsTitle":"Stations",
		"stationsTooltip":"Will fill new systems if specified number of populated systems is insufficient.",
		"maxPlanetsTitle":"Maximum inhabited planets per system",
		"maxMarketsTitle":"Maximum inhabited planets + stations per system",
		"randomizeFactionsTooltip":"Every faction has a 50% chance to be enabled (except independents, which will not be toggled from their current setting).",

		"fleetSolo":"Solo frigate",
		"fleetCombatSmall":"Combat (small)",
		"fleetTradeSmall":"Trade (small)",
		"fleetExplorerSmall":"Explorer (small)",
		"fleetCarrierSmall":"Carrier (small)",
		"fleetCombatLarge":"Combat (large)",
		"fleetTradeLarge":"Trade (large)",
		"fleetExplorerLarge":"Explorer (large)",
		"fleetCarrierLarge":"Carrier (large)",
		"fleetSuper":"Super ship",
		"fleetGrandFleet":"Grand fleet",
		"fleetRandomReroll":"[Reroll random ships]",
		"fleetCycle":"[Cycle fleets]"
	},
	"exerelin_officers":{
		"officer":"officer",
		"officers":"officers",

		"battle_escaped":"Your $officers $officerNames escaped the destruction of $theirShips",
		"battle_noReportIn":"Your $officers did not report in after the battle",
		"battle_casualties":"Your $officer was listed among the casualties",
		"battle_casualties_plural":"Your $officers were listed among the casualties",
		"confirmDeath":"The post-action report confirms that your $officers didn't make it",
		"savedFromWreckage":"Your $officer was saved from the wreckage",
		"savedFromWreckagePlural":"Your $officers were saved from the wreckage",

		"noOfficersDeadForNow":"No officers have died under your command... so far",
		"noOfficersDead":"No officers have died under your command.",
		"diedOn":"Died on $date",
		"lastCommand":"Last commanding: $shipName ($shipClass)",

		"causeOfDeath":"cause of death",
		"causeOfDeath1":"explosive decompression",
		"causeOfDeath2":"plasma burns",
		"causeOfDeath3":"decapitation",
		"causeOfDeath4":"blood loss",
		"causeOfDeath5":"vital organ trauma",
		"causeOfDeath6":"total bodily disintegration",
		"causeOfDeath7":"electrocution",
		"causeOfDeath8":"asphyxia",
		"causeOfDeath9":"radiation poisoning",
		"causeOfDeath10":"suit malfunction",
		"causeOfDeath11":"escape pod failure",
		"causeOfDeath12":"fragging",

		"hisOrHerShip":"$pronoun ship",
		"theirShips":"their ships",

		"missingInAction":"missing in action",
		"miaPresumedDead":"MIA, presumed dead",
		"killedInAction":"killed in action",
		"rescued":"rescued"
	},
	
	"nex_insurance":{
		"title":"Insurance Payout",
		"desc":"You have received $paid from $theEmployer to help cover your losses in the recent battle.",
		"titleUnpaid":"Insurance payout: no payment",
		"descUnpaid":"Due to your bad conduct in their eyes, $theEmployer have refused to make any insurance payments.",
		"bulletPayment":"%s received",
		
		"headerBreakdown":"Breakdown",
		"descInsuranceMult":"Insurance mult: %s×",
		"descZeroHull":"Base value assumes zero hull and combat readiness.",
		"descBaseValue":"Base value is modified by D-mods already present on the hull.",
		
		"entryDescAmount":"Insured for %s",
		"entryDescLost":"Ship lost; paying for base value",
		"entryDescRecovered":"Ship recovered: had %s D-mods, now has %s",
		"entryDescNewDHull":"New (D) hull: rated as total loss, paying for base value",
		"entryDescMoreDMods":"D-mod count increased: paying %s of base value",
	},
	
	"nex_playerOutpost":{
		"outposts":"outposts",
		"outpostProperName":"Outpost",
		
		"resourcesAvailable":"Resources required (available)",
		"resourcesRecovered":"Resources recovered",
		"resourceConsumeNote":"All resources except crew will be consumed.",
		"upkeepNote":"Monthly upkeep: %s",
		"outpostComplete":"Your new outpost has been completed.",
		"insufficientResources":"Your $shipOrFleet does not have enough resources to build an outpost.",
		"commodityStatDesc":"Covert supply",
		"commodityStatDescUnneeded":"Automated station",
		"tooltipUpkeep":"Each outpost requires an upkeep of %s credits per month.",
		
		"intelTitle":"Outpost",
		"intelTitleLost":"lost",
		"intelDesc":"You have an outpost $name in the $location. It serves as a location for stockpiling of supplies and fuel, and a temporary storage location for salvage.",
		"intelDescLost":"The outpost is no longer operational.",
		"intelButtonScuttle":"scuttle",
		"intelPromptScuttle":"This will remotely shut down the station. All cargo will be lost.\n\nContinue?",
	},	
	"exerelin_raid":{
		"raid":"raid",
		"raids":"raids",
		"theRaid":"the raid",
		"raidForce":"raiders",
		"theRaidForce":"the raiders",
		"forceIsOrAre":"are",	# if raidForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"have",	# same
		
		"stageOrganizeRemnant":"$TheAction is currently being planned at a base in the $location.",
		
		"conditionPenalties":"%s stability, %s accessibility.",
		"conditionListHeader":"The following hostile factions have active raids in the system:",
	},
	"nex_raidDialog":{
		"expectedSpoilsHeader":"expected spoils",
		"expectedSpoilsNone":"After careful consideration, there do not appear to be any targets likely to yield much of value.",
		"expectedSpoils":"The commander of your ground forces designates several warehouses and other locations most likely to yield valuable items.",
		"expectedSpoilsValue":"The estimated value of the common commodities obtained is projected to be around ",
		"expectedSpoilsValueReduced":"The value is lower than it otherwise might be due to the colony suffering from various shortages.",

		"spoilsHIandBP":"In addition, the colony has well-developed heavy industry, increasing the possibility of obtaining some ship weapons and modspecs, as well as blueprints.",
		"spoilsBP":"In addition, the colony has facilities that make use of blueprints, increasing the possibility of some being obtained.",
		"spoilsHI":"In addition, the colony has well-developed heavy industry, increasing the possibility of obtaining some ship weapons and modspecs.",
		"spoilsMilitary":"In addition, the colony has a military presence, increasing the possibility of obtaining some ship weapons and modspecs.",
		"spoilsAICores":"There are also trace indications of AI cores being used, which might be obtained as well.",

		"spoilsNoBlueprints":"However, the local blueprint facilities have been locked down due to recent raids.",
		"spoilsNoBlueprints2":"Blueprints cannot be acquired from this raid.",

		"spoilsItemWeapons":"ship weapons",
		"spoilsItemModspecs":"modspecs",
		"spoilsItemBlueprints":"blueprints",
		"spoilsItemAICores":"AI cores",

		"dialogConfirmText":"Your forces are ready to go, awaiting your final confirmation."
	},
	
	"exerelin_reinitScreen":{
		"introText":"You have loaded Nexerelin into an existing save. Please configure starting options:",

		"allowRespawn":"Allow faction respawn",
		"allowRespawnNonOriginal":"Allow respawn for factions not currently present",
		"hardMode":"Starfarer Mode",
		"randomizeRelationships":"Randomize faction relationships",
		"randomizeRelationshipsPirate":"Randomize relationships for pirate factions"
	},
	"nex_reliefFleet":{		
		"intelTitle":"Relief Fleet: $market",
		
		"intelDesc":"$TheFaction $isOrAre sending a relief fleet to $market in the $location, held by $theOtherFaction, to address recent unrest.",
		
		"intelBulletAssembling":"Launching from $market in $days",
		"intelBulletETA":"Estimated $days until arrival",
		"intelBulletAssemblingUnknownLoc":"Launching in $days",
		"intelBulletLaunched":"Fleet launched from $market",
		"intelBulletSuccess":"Aid delivered",
		"intelBulletFailedToSpawn":"Fleet failed to assemble",
		"intelBulletTargetDestroyed":"Cancelled: Destination destroyed",
		"intelBulletDefeated":"Fleet defeated",
		"intelBulletHostile":"Cancelled: Hostile",
		"intelBulletOver":"Mission over",
		
		"intelStatusAssembling":"The aid convoy is being prepared and will launch from $market in $days.",
		"intelStatusTravelling":"The convoy is travelling to $market.",
		"intelStatusSuccess":"The convoy has delivered the aid to $market.",
		"intelStatusFailedToSpawn":"The convoy has failed to assemble at $market.",
		"intelStatusDefeated":"The convoy has been destroyed or otherwise prevented from reaching its destination.",
		"intelStatusTargetDestroyed":"$market has been destroyed. Relief is now moot.",
		"intelStatusHostile":"$TheFaction $isOrAre hostile to $theOtherFaction. The relief convoy has been recalled.",
		"intelStatusUnknown":"The mission has been called off for unspecified reasons.",
		
		"intelStatusUnrestReduction":"Unrest on $market reduced by %s.",
	},
	"nex_respawn":{
		"baseIntelDesc":"Remnants of $theFaction have established a base in the $location. They likely intend to use it as a staging point for their great re-entry into the Sector.",
		"baseIntelDescUnknown":"You have not yet discovered the exact location or capabilities of this base.",
		"baseIntelDescAbandoned":"This base is no longer operational.",
		"baseIntelTitle":"$faction Resurgent Base",
		"marketName":"Resurgent Base",
	},
	"nex_satbomb":{
		"expedition":"saturation bombardment",
		"expeditions":"saturation bombardments",
		"theExpedition":"the saturation bombardment",
		"expeditionForce":"bombardment force",
		"expeditionForcePossessive":"bombardment force's",
		"theExpeditionForce":"the bombardment force",
		"forceIsOrAre":"is",	# if raidForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"have",	# same
		
		"intelDesc":"$TheFaction $isOrAre launching a $action of $market in the $location, held by $theTargetFaction. The task force is projected to be $strDesc and is likely comprised of $numFleets $fleetsStr.",
		"intelDescVengeance":"The planned bombardment is an act of vengeance in response to the vile hostile actions of the hated $playerName.",
		
		"intelStageAction":"The task force is currently in-system.",
		"intelStageActionSuccess":"The task force has bombarded $market.",
		"intelStageActionInsufficientReached":"The task force has failed to reach $location in adequate strength.",
		"intelStageActionDefeatedGround":"The task force has been repelled by the ground defenses of $market.",
		"intelStageActionDefeatedSpace":"The task force has been defeated by the defenders of $market.",
		"intelStageActionAborted":"The bombardment has been aborted.",
	},
	"nex_specialForces":{	
		"intelTitle":"Special Task Group",
		"intelTag":"Special forces",
		
		"intelDesc1":"The $faction special task group $fleetName is present in the Sector.",
		"intelDesc1NoName":"A $faction special task group is present in the Sector.",
		"intelDescCommander":"The fleet is known to be commanded by $rank $name, $levelDesc.",
		"intelDescStr":"The fleet's estimated strength is %s fleet points.",
		"intelDescAction":"Current action: $action",
		"intelDescOver":"The $faction special task group $fleetName is no longer operational.",
		"intelDescDebug":"This intel is displayed only for debugging. You should not be seeing it under normal conditions.",
	},
	
	"exerelin_superweapon":{
		"crText":"Superweapon used",
		"stabilityText":"Planet buster",

		"successText":"The missile scores a direct hit! $market has taken severe damage.",
		"stabilityPenaltyReport":"Stability penalty: $stability",
		"commodityDestructionReport":"Average $percent% of commodity stockpiles destroyed"
	},
	"nex_tribute":{
		"cond_immigrationDesc":"Tributary colony",
		"cond_incomeDesc":"Tribute",
		
		"cond_tooltip1":"- Income reduced by %s",
		"cond_tooltip2":"- Colony growth reduced by %s",
		"cond_tooltip3":"- Maximum colony size of %s",
		
		"intel_title":"Tribute Demand",
		"intel_desc1":"$TheFaction $hasOrHave sent you a comminique regarding the status of $market in the $system, which is claimed by said faction. The text is quite needlessly verbose, but can be readily summarized as \"That's a nice colony you have there, $playerName. It would be a shame if something were to happen to it.\"",
		"intel_desc2":"To avert an undesirable outcome, $theFaction demands a tribute equal to %s of the colony's gross income. Its population growth will also be reduced by %s, and it cannot exceed size %s.",
		"intel_descAccepted":"You are currently paying tribute from $market.",
		"intel_descRejected":"You have refused to pay tribute for $market.",
		"intel_descOver":"The tribute event is now over.",
		"intel_descTime":"You have $timeLeft $days to accept the offer.",
		"intel_dialogConfirm":"Confirm?",
	},
	
	"nex_vengeance":{
		"vengeanceFleet0":"Hunter Fleet",
		"vengeanceFleet0Single":"a Hunter Fleet",
		"vengeanceLevel0":"Grudge",

		"vengeanceFleet1":"Executors",
		"vengeanceFleet1Single":"Executors",
		"vengeanceLevel1":"Vendetta",

		"vengeanceFleet2":"Kill-Fleet",
		"vengeanceFleet2Single":"a Kill-Fleet",
		"vengeanceLevel2":"Revenge",
		
		"intelTitle":"Vengeance Fleet - Level $level",
		
		"intelDesc0":"Due to your reputation with $theFaction, $aFleetType is being prepared, assigned to seek you out and eliminate you if possible.",
		"intelDesc1":"Due to your bitter hostilities with $theFaction, $aFleetType is being prepared, ordered to hunt your fleet down and destroy you.",
		"intelDesc2":"Due to your infamous and vengeful conflict with $theFaction, $aFleetType is being prepared, their directive being to find you and kill you by any means necessary.",
		
		"intelBulletAssembling":"Launching from $market in $days",
		"intelBulletAssemblingUnknownLoc":"Launching in $days",
		"intelBulletLaunched":"Fleet launched from $market",
		"intelBulletFailedToSpawn":"Fleet failed to assemble",
		"intelBulletDefeated":"Fleet defeated",
		"intelBulletExpired":"Mission over",
		"intelBulletNoLongerHostile":"Cancelled: No longer hostile",
		
		
		"intelStatusAssembling":"The fleet will launch from $market in $days.",
		"intelStatusActive":"The fleet is currently active and will pursue you for $duration.",
		"intelStatusFailedToSpawn":"The fleet has failed to spawn. The event is now over.",
		"intelStatusDefeated":"The fleet has been defeated.",
		"intelStatusExpired":"The fleet is returning to base.",
		"intelStatusNoLongerHostile":"$TheFaction $isOrAre no longer hostile. The vengeance mission has been terminated.",
		"intelStatusUnknown":"The mission has been called off for unspecified reasons.",
	},
	"exerelin_victoryScreen":{
		#"victory_conquest":"Congratulations! $TheFaction have crushed all opposition and now reigns supreme over the $clusterName cluster!",
		"victory_conquest":"Congratulations! $TheFaction have crushed all opposition and now reigns supreme over the Sector!",
		"victory_diplomatic":"Congratulations! $TheFaction and their allies control the Sector!",
		"victory_conquest_ally":"Congratulations! Your ally $theFaction have crushed all opposition and now reigns supreme over the Sector!",
		"victory_diplomatic_ally":"Congratulations! You have joined $theFaction and their other allies in controlling the Sector!",

		"defeat_conquest":"Alas, $theFaction have conquered the Sector. All your efforts have come to naught.",
		"defeat_diplomatic":"$TheFaction and their allies now dominate the Sector. Unfortunately, you are not one of them...",

		"retired":"You have chosen to retire prematurely. Yet the struggles of the Sector continue, on and on...",

		"whatNow":"What now?",
		"youHaveWon":"You have won a $victoryType victory!",

		"officerMemorial":"Officer memorial",

		"statsLevel":"Level",
		"statsDaysElapsed":"Days elapsed",
		"statsShipsKilled":"Ships killed",
		"statsShipsLost":"Ships lost",
		"statsFpKilled":"Fleet points killed",
		"statsFpLost":"Fleet points lost",
		"statsOfficersLost":"Officers lost",
		"statsMarketsCaptured":"Markets captured",
		"statsMarketsRaided":"Markets raided",
		"statsTacticalBombardments":"Tactical bombardments",
		"statsSaturationBombardments":"Saturation bombardments",
		"statsAgentsUsed":"Agents used",
		"statsSaboteursUsed":"Saboteurs used",
		"statsPrisonersRepatriated":"Prisoners repatriated",
		"statsPrisonersRansomed":"Prisoners ransomed",
		"statsSlavesSold":"Slaves sold",
		"statsOrphansMade":"Orphans made",
		
		"intelTitleConquest":"Conquest Victory",
		"intelTitleDiplomatic":"Diplomatic Victory",
		"intelTitleRetired":"Player Retired",
		
		"intelBulletFaction":"$faction",
		"intelBulletFactionAndAllies":"$faction and allies",
		
		"intelDescConquest":"$TheFaction $hasOrHave crushed all possible competition. Their rule over the Sector is now undisputed.",
		"intelDescDiplomatic":"$TheFaction and their allies are the only remaining powers in the Sector. Peace has come to this corner of the galaxy, at least for now.",
		"intelDescRetired":"You, $playerName, have chosen to retire from the game. The conflicts of the Sector will have to unfold without you.",
		
		"intelStringYouWon":"You have won the game!"
	},

	"exerelin_misc":{
		"intelScreen":"Intel screen",
		"directoryOptions":"Directory options",
		
		"creditsAvailable":"You have %s credits available.",
		"resourcesNeeded":"resources needed (available)",
		
		"alreadyKnown":"known",

		"deliverCommodities":"Deliver $num $commodity",

		"counterInsurgencyRep":"At your current relationship with $theFaction, payment for deliveries is $mult of current per-unit price.",
		"counterInsurgencyRepFixed":"Payment for deliveries is $mult of current per-unit price.",

		"aiCoresSelect":"Select AI cores to turn in",
		"aiCoresMsg1":"Compared to dealing with other factions, turning AI cores in to $faction will result in:",
		"aiCoresBounty":"Bounty value",
		"aiCoresRep":"Reputation gain",
		"aiCoresMsg2":"If you turn in the selected AI cores, you will receive a %s bounty and your standing with $faction will improve by %s points.",
		
		"blueprintSwapSelect":"Select blueprints to trade in",
		"blueprintSwapMsg":"The selected blueprints are worth $points points.",
		"blueprintSwapPurchaseOption":"$name ($points pts)",
		"blueprintSwapPurchased":"Acquired $name blueprint",
		"blueprintSwapGainedPoints":"Gained $points points",
		"blueprintSwapLostPoints":"Lost $points points",
		
		"hiddenBaseSupply":"Underground procurement",
		"hiddenBaseDevelopmentLevel":"Development level",
		"hiddenBaseDiscovered":"discovered",
		"hiddenBaseAbandoned":"abandoned",
		"hiddenBaseDestroyed":"destroyed",
		"hiddenBaseLocationUnknown":"Exact Location Unknown",
		
		"pirateActivityTitle":"Pirate activity",
		"pirateActivityPenalty":"%s stability, %s accessibility.",
		"pirateActivityPenaltyStab":"%s stability",
		"pirateActivityPenaltyAccess":"%s accessibility.",
		"pirateActivityPenaltyNone":"No perceptible impact on operations as of yet.",
		"pirateActivityPenaltyModified":"Impacts reduced due to reputation with pirates (%s).",
		
		"errorStarsectorVersion":"This version of Starsector is too old for %s!\nPlease make sure Starsector is up to date.\nRequired Version: %s\nCurrent Version: %s",
		"errorLazyLib":"Nexerelin requires LazyLib to function!\nGet it at fractalsoftworks.com/forum/index.php?topic=5444.0",
		"errorOfficerMaxLevel":"Officer max level in config is over 29 (current: $currMax)\nThis risks a hang during gameplay.\nSee http://fractalsoftworks.com/forum/index.php?topic=13195.0 for more details.",
		"errorPrismLoad":"Failed to load Prism High-End Seller configuration defs!\nReport this issue with your modlist.",
	},
}
